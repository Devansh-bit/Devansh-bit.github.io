{"version":3,"sources":["components/Navbar/index.js","components/Navbar/Navbar.js","components/Home/index.js","components/Home/Home.js","components/About/data.js","components/About/About.js","components/About/index.js","components/Commands/data.js","components/Commands/Commands.js","components/Commands/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","navBarNav","setNavBarNav","showHideNav","className","to","onClick","style","left","href","target","Home","serverCount","class","data","image","name","github","instagram","linkedin","AboutCard","person","src","alt","title","About","people","map","index","commands","category","description","Menu","filterCommands","selectedCategory","categories","Set","dat","Commands","setCommands","setSelectedCategory","search","createRef","current","value","newCommands","filter","command","type","placeholder","ref","onChange","searchText","includes","id","loader","document","querySelector","App","setServerCount","useEffect","fetch","then","response","json","total_servers","catch","error","classList","add","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.49c9838c.chunk.js","sourcesContent":["import Navbar from \"./Navbar\";\r\nexport default Navbar;\r\n","import \"./Navbar.css\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const [navBarNav, setNavBarNav] = useState(-100);\r\n  const showHideNav = () => {\r\n    if (navBarNav === 0) {\r\n      setNavBarNav(-100);\r\n    } else if (navBarNav === -100) {\r\n      setNavBarNav(0);\r\n    }\r\n  };\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          <h1>Chintu Bot</h1>\r\n        </Link>\r\n        <div className=\"toggle\" onClick={showHideNav}>\r\n          <i className=\"fas fa-bars\"></i>\r\n        </div>\r\n        <div\r\n          className=\"navbar-nav\"\r\n          style={{ left: `${navBarNav}%` }}\r\n          onClick={showHideNav}\r\n        >\r\n          <Link to=\"/\" className=\"nav-item\">\r\n            Home\r\n          </Link>\r\n          <Link to=\"/about\" className=\"nav-item\">\r\n            About\r\n          </Link>\r\n          <Link to=\"/commands\" className=\"nav-item\">\r\n            Commands\r\n          </Link>\r\n          <a\r\n            href=\"https://discord.gg/RtPpj5w4C5\"\r\n            target=\"blank\"\r\n            className=\"nav-item\"\r\n          >\r\n            <span className=\"joindiscord\">Join Discord</span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import Home from \"./Home\";\r\nexport default Home;","import \"./Home.css\";\r\nconst Home = ({ serverCount }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row home\">\r\n        <div className=\"col-12\">\r\n          <div className=\"title\">Chintu Bot</div>\r\n          <div className=\"subtitle\">Currently in {serverCount} Servers</div>\r\n          <a\r\n            className=\"joinbtn\"\r\n            href=\"https://discord.com/api/oauth2/authorize?client_id=790900950885203978&permissions=8&scope=bot\"\r\n          >\r\n            Invite Now\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div class=\"d-none\">\r\n        This is a Chintu Bot for Moderation, Memes, Fun and many More. I am\r\n        ChintuBot, I am Chintu Bot. Discord bots are AIs that can perform a\r\n        number of useful automated tasks on your server, such as welcoming new\r\n        members, moderating content, and banning rule breakers. I am ChintuBot,\r\n        I am Chintu Bot. You can use Discord bot commands to add music, memes,\r\n        games, and other content to your server. I am ChintuBot, I am Chintu\r\n        Bot. To add ChintuBot to a Discord server, find it either on an online\r\n        bot list or through the creator’s website. After clicking on the one you\r\n        want, click the “invite” button to be redirected to Discord’s browser\r\n        application. I am ChintuBot, I am Chintu Bot. There, as shown above, you\r\n        will be able to decide which server to invite the bot to, though do keep\r\n        in mind that you can only add a bot to a server that you are an admin or\r\n        moderator of. I am ChintuBot, I am Chintu Bot. After authorizing access,\r\n        the bot will appear on your server and will be usable right away. I am\r\n        ChintuBot, I am Chintu Bot. Bots are a great way to make your server\r\n        more organized, fun, and interactive. I am ChintuBot, I am Chintu Bot.\r\n        Every user should learn how to add Discord bots in order to better their\r\n        server. I am ChintuBot, I am Chintu Bot. What is a Discord Server? A\r\n        server is like a community group, with different rooms, each room is\r\n        referred to as a channel. A channel is where you can chat. You can drop\r\n        in your messages in a channel as you would in a normal chat service. In\r\n        addition, There are voice channels where you can. What is a Discord bot?\r\n        I am ChintuBot, I am Chintu Bot. A discord bot is a bot that runs only\r\n        on discord, it provides with you more functionality than a normal user\r\n        has, the best part is you can code your own bot and make it do whatever\r\n        you want. A discord bot can be a I am ChintuBot, I am Chintu Bot. 1.\r\n        Chat Bot (a bot that chat & tries to behave like humans) 2. Moderation\r\n        Bot ( it will automatically moderate your server; kick, mute or ban\r\n        members, if someone tries to create spam, or anything similar) 3. Music\r\n        Bot (It can play music in a Discord Server from Youtube or anywhere\r\n        else) I am ChintuBot, I am Chintu Bot. Bots are generally used for 1.\r\n        Manage Servers (Kick, Ban Mute Members) via bot commands. 2. Control the\r\n        level of Spam 3. Play Music right from within Discord. 4. View\r\n        information about your Discord server or user. 5. Create Webhooks for\r\n        your one or many Github Repositories or a site that supports it. 5.\r\n        Create new features, that may not be already available on Discord. Ex>\r\n        Levelling System I am ChintuBot, I am Chintu Bot. Discord is an American\r\n        VoIP, instant messaging and digital distribution platform designed for\r\n        creating communities. Users communicate with voice calls, video calls,\r\n        text messaging, media and files in private chats or as part of\r\n        communities called \"servers.\" Servers are a collection of persistent\r\n        chat rooms and voice chat channels. Discord runs on Windows, macOS,\r\n        Android, iOS, iPadOS, Linux, and in web browsers. As of July 21, 2019,\r\n        there are over 250 million users of the software.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","const data = [{\r\n        image: \"https://cdn.discordapp.com/attachments/819532187820883968/819532249925156864/gaurav.jpg\",\r\n        name: \"Gaurav Gupta\",\r\n        github: \"https://github.com/programmergaurav\",\r\n        instagram: \"https://www.instagram.com/programmergaurav/\",\r\n        linkedin: \"https://www.linkedin.com/in/programmergaurav/\"\r\n\r\n    },\r\n    {\r\n        image: \"https://cdn.discordapp.com/attachments/819532187820883968/825020091254308974/unknown.png\",\r\n        name: \"Rahul Mishra\",\r\n        github: \"https://github.com/Supreme-Watermelon\",\r\n        instagram: \"https://www.instagram.com/real_muthafuckin_mishra/\",\r\n        linkedin: \"https://www.linkedin.com/in/rahul-mishra-9953571bb/\"\r\n\r\n    },\r\n    {\r\n        image: \"https://cdn.discordapp.com/attachments/819532187820883968/819532247878205500/devansh.jpg\",\r\n        name: \"Devansh Gupta\",\r\n        github: \"https://github.com/Devansh-bit/\",\r\n        instagram: \"https://www.instagram.com/nerdy_dg/\",\r\n        linkedin: \"https://www.linkedin.com/in/devansh-gupta-087b86205/\"\r\n\r\n    },\r\n    {\r\n        image: \"https://cdn.discordapp.com/attachments/819532187820883968/819532258145992714/swastik.jpg\",\r\n        name: \"Swasthik Shetty\",\r\n        github: \"https://github.com/swasthikshetty10\",\r\n        instagram: \"https://www.instagram.com/swasthik__shetty10/\",\r\n        linkedin: \"https://www.linkedin.com/in/swasthik-shetty-15632b1b8/\"\r\n\r\n    }\r\n]\r\nexport default data;","import \"./About.css\";\r\nimport people from \"./data\";\r\n\r\nconst AboutCard = ({ person }) => {\r\n  return (\r\n    <div className=\"col-12 col-md-4 col-lg-3\">\r\n      <div className=\"aboutcard\">\r\n        <img src={person.image} alt=\"Chintubot\" title={person.name}></img>\r\n        <div className=\"name\">{person.name}</div>\r\n        <div className=\"socialmedia\">\r\n          <a title=\"Github profile Link\" target=\"blank\" href={person.github}>\r\n            <i className=\"fab fa-github\"></i>\r\n          </a>\r\n          <a\r\n            title=\"Instagram profile link\"\r\n            target=\"blank\"\r\n            href={person.instagram}\r\n          >\r\n            <i className=\"fab fa-instagram\"></i>\r\n          </a>\r\n          <a\r\n            title=\"linkedin profile link\"\r\n            target=\"blank\"\r\n            href={person.linkedin}\r\n          >\r\n            <i className=\"fab fa-linkedin\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst About = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row about\">\r\n        {people.map((person, index) => {\r\n          return <AboutCard person={person} key={index} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default About;\r\n","import About from \"./About\";\r\nexport default About;","const commands = [{\r\n        name: \"avatar\",\r\n        category: \"info\",\r\n        description: \"Get a User's Avatar\"\r\n    },\r\n    {\r\n        name: \"channelinfo\",\r\n        category: \"info\",\r\n        description: \"Get Channel's Details\"\r\n    }, {\r\n        name: \"server\",\r\n        category: \"info\",\r\n        description: \"Get Server's Details\"\r\n    }, {\r\n        name: \"user\",\r\n        category: \"info\",\r\n        description: \"Get User's Details\"\r\n    }, {\r\n        name: \"ban\",\r\n        category: \"moderation\",\r\n        description: \"Bans the mentioned member\"\r\n    }, {\r\n        name: \"clear\",\r\n        category: \"moderation\",\r\n        description: \"Purges specified number of messages\"\r\n    }, {\r\n        name: \"kick\",\r\n        category: \"moderation\",\r\n        description: \"Kicks the mentioned member\"\r\n    }, {\r\n        name: \"mute\",\r\n        category: \"moderation\",\r\n        description: \"Mute a Member\"\r\n    }, {\r\n        name: \"unmute\",\r\n        category: \"moderation\",\r\n        description: \"Unmute a Member\"\r\n    }, {\r\n        name: \"role\",\r\n        category: \"moderation\",\r\n        description: \"Asks tagged user to take roles\"\r\n    }, {\r\n        name: \"warn\",\r\n        category: \"moderation\",\r\n        description: \"Warns a member with the provided reason\"\r\n    }, {\r\n        name: \"removewarn\",\r\n        category: \"moderation\",\r\n        description: \"Remove Warnings of a Member \"\r\n    }, {\r\n        name: \"warns\",\r\n        category: \"moderation\",\r\n        description: \"Lists All Warnings of a Member \"\r\n    }, {\r\n        name: \"csmeme\",\r\n        category: \"memes\",\r\n        description: \"Get a random Programming Meme\"\r\n    }, {\r\n        name: \"foodporn\",\r\n        category: \"memes\",\r\n        description: \"Get random Food's Images\"\r\n    }, {\r\n        name: \"meme\",\r\n        category: \"memes\",\r\n        description: \"Get a random Meme  \"\r\n    }, {\r\n        name: \"uwu\",\r\n        category: \"memes\",\r\n        description: \"Sends an awww inducing picture\"\r\n    }, {\r\n        name: \"wsmeme\",\r\n        category: \"memes\",\r\n        description: \"Sends a meme from r/WholesomeMemes\"\r\n    }, {\r\n        name: \"HOF\",\r\n        category: \"fun\",\r\n        description: \"Hall of Fame (for extremely dumb/smart \"\r\n    }, {\r\n        name: \"_8ball\",\r\n        category: \"fun\",\r\n        description: \"Evident by the name \"\r\n    }, {\r\n        name: \"camel\",\r\n        category: \"fun\",\r\n        description: \"Makes text camelcase \"\r\n    }, {\r\n        name: \"chintusearch\",\r\n        category: \"fun\",\r\n        description: \"Special search for special people \"\r\n    }, {\r\n        name: \"count\",\r\n        category: \"fun\",\r\n        description: \"Returns total number of messages in a channel \"\r\n    }, {\r\n        name: \"emojify\",\r\n        category: \"fun\",\r\n        description: \"Emojifys given text \"\r\n    }, {\r\n        name: \"retard\",\r\n        category: \"fun\",\r\n        description: \"Changes text into rEtArD cAsE \"\r\n    }, {\r\n        name: \"reverse\",\r\n        category: \"fun\",\r\n        description: \"Reverses a message for you \"\r\n    }, {\r\n        name: \"say\",\r\n        category: \"fun\",\r\n        description: \"Says a message on behalf of the user \"\r\n    }, {\r\n        name: \"gituser\",\r\n        category: \"social\",\r\n        description: \"Returns info about a github user \"\r\n    }, {\r\n        name: \"repos\",\r\n        category: \"social\",\r\n        description: \"Returns top 5 repositories of the requested user \"\r\n    }, {\r\n        name: \"gsearch\",\r\n        category: \"social\",\r\n        description: \"Returns top google search results for the given query \"\r\n    }, {\r\n        name: \"CreateLiveSubs\",\r\n        category: \"social\",\r\n        description: \"Creates a voice channel with the subscribers of the given channel \"\r\n    }, {\r\n        name: \"add_reply\",\r\n        category: \"others\",\r\n        description: \"\"\r\n    }, {\r\n        name: \"ping\",\r\n        category: \"others\",\r\n        description: \"Shows Ping \"\r\n    }, {\r\n        name: \"help\",\r\n        category: \"others\",\r\n        description: \"Shows Help message\"\r\n    }\r\n]\r\nexport default commands;","import \"./Commands.css\";\r\nimport data from \"./data\";\r\nimport { useState, createRef } from \"react\";\r\nconst Menu = ({ filterCommands, selectedCategory }) => {\r\n  const categories = [\"All\", ...new Set(data.map((dat) => dat.category))];\r\n  return (\r\n    <div>\r\n      {categories.map((category, index) => {\r\n        return (\r\n          <div\r\n            className={\r\n              selectedCategory === category\r\n                ? \"commandoptions active\"\r\n                : \"commandoptions\"\r\n            }\r\n            key={index}\r\n            onClick={() => filterCommands(category)}\r\n          >\r\n            {category}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nconst Commands = () => {\r\n  const [commands, setCommands] = useState(data);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n  let search = createRef();\r\n\r\n  const filterCommands = (category) => {\r\n    if (category === \"All\") {\r\n      setCommands(data);\r\n      setSelectedCategory(\"All\");\r\n    } else {\r\n      search.current.value = \"\";\r\n      const newCommands = data.filter(\r\n        (command) => command.category === category\r\n      );\r\n      setSelectedCategory(category);\r\n      setCommands(newCommands);\r\n    }\r\n  };\r\n  const searchCommand = () => {\r\n    filterCommands(\"All\");\r\n    const searchText = search.current.value;\r\n    const newCommands = data.filter((dat) => dat.name.includes(searchText));\r\n    setCommands(newCommands);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row commands\">\r\n        <div className=\"col-12\">\r\n          <div className=\"title\">COMMANDS</div>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Menu\r\n            filterCommands={filterCommands}\r\n            selectedCategory={selectedCategory}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search\"\r\n            placeholder=\"Search For a Command\"\r\n            ref={search}\r\n            onChange={searchCommand}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          {commands.map((command, index) => {\r\n            return (\r\n              <div className=\"command\" id=\"info\" key={index}>\r\n                ${command.name}\r\n                <span className=\"description\"> - {command.description}</span>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Commands;\r\n","import Commands from \"./Commands\";\r\nexport default Commands;","import \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Home from \"./components/Home\";\r\nimport About from \"./components/About\";\r\nimport Commands from \"./components/Commands\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nconst loader = document.querySelector(\".loading\");\r\nconst hideLoader = () => loader.classList.add(\"d-none\");\r\n\r\nfunction App() {\r\n  const [serverCount, setServerCount] = useState(0);\r\n  const url =\r\n    \"https://jsonblob.com/api/jsonBlob/53780253-693c-11eb-b382-45923ea53bb5\";\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => setServerCount(data.total_servers))\r\n      .catch((error) => setServerCount(69));\r\n    hideLoader();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home serverCount={serverCount} />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/commands\">\r\n            <Commands />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./grid.min.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}